{"version":3,"sources":["utilities/theming.js","utilities/utilities.js","components/HiddenCell.js","components/RevealedCell.js","components/Board.js","components/GameControls.js","components/GameEndAlert.js","components/App.js","serviceWorker.js","index.js"],"names":["themes","color","primary","darker","standard","lighter","font","body","typeface","weigth","size","createTheming","ThemeProvider","withTheme","getStyles","theme","customStyles","flexRow","display","flexDirection","flexCol","flexRowTL","justifyContent","alignItems","flexRowTC","flexRowTR","flexRowCL","flexRowCC","flexRowCR","flexRowBL","flexRowBC","flexRowBR","flexColTL","flexColTC","flexColTR","flexColCL","flexColCC","flexColCR","flexColBL","flexColBC","flexColBR","fullScreen","width","height","fontBody","fontFamily","fontWeight","weight","fontSize","baseStyles","BOARD_STATE","BOARD_PARAMETERS","easy","mineCount","medium","hard","formatTimerDisplay","timerValue","Math","floor","toString","padStart","join","cell","border","borderRadius","cursor","hidden","background","flagged","onClickHandler","event","preventDefault","props","x","y","isFlagged","toggleFlagCell","revealCell","type","render","style","onClick","onContextMenu","React","Component","colors","1","2","3","4","5","6","7","8","revealed","mine","lightest","cellValue","value","evaluteCellContent","isMine","newMatrix","spreadReveal","matrix","isRevealed","state","setState","emitBoardState","evaluateBoardState","map","column","minePositions","some","reduce","sum","key","random","initializeBoard","boardModel","Array","keys","set","Set","add","JSON","stringify","round","parse","forEach","prevProps","id","this","controls","marginBottom","diff","outline","padding","margin","borderLeft","borderRight","borderTop","position","top","right","content","opt","reset","difficulty","changeGameDifficulty","resetGame","onChange","zIndex","alert","textAlign","acknowledgement","marginTop","boardState","Fragment","app","gameTimer","App","startTimer","timerLoop","setInterval","timer","stopTimer","clearInterval","undefined","target","boardId","respondToBoardState","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.17451047.chunk.js","sourcesContent":["import { createTheming } from '@callstack/react-theme-provider';\n\nconst themes = {\n    'light': {\n        color: {\n            primary: {\n                darker: '#BBBBBB',\n                standard: '#DDDDDD',\n                lighter: '#FFFFFF'\n            }\n        },\n        font: {\n            body: {\n                typeface: 'monospace',\n                weigth: 'standard',\n                size: '1rem'\n            }\n        }\n    },\n    'dark': {\n\n    },\n    'high-contrast': {\n\n    }\n};\n\nconst { ThemeProvider, withTheme } = createTheming(themes['light']);\n\nconst getStyles = (theme, customStyles = () => ({})) => {\n    const flexRow = {\n        display: 'flex',\n        flexDirection: 'row'\n    };\n\n    const flexCol = {\n        display: 'flex',\n        flexDirection: 'column'\n    };\n\n    const flexRowTL = {\n        ...flexRow,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start'\n    };\n\n    const flexRowTC = {\n        ...flexRow,\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n    };\n\n    const flexRowTR = {\n        ...flexRow,\n        justifyContent: 'flex-end',\n        alignItems: 'flex-start'\n    };\n\n    const flexRowCL = {\n        ...flexRow,\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n    };\n\n    const flexRowCC = {\n        ...flexRow,\n        justifyContent: 'center',\n        alignItems: 'center'\n    };\n\n    const flexRowCR = {\n        ...flexRow,\n        justifyContent: 'flex-end',\n        alignItems: 'center'\n    };\n\n    const flexRowBL = {\n        ...flexRow,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end'\n    };\n\n    const flexRowBC = {\n        ...flexRow,\n        justifyContent: 'center',\n        alignItems: 'flex-end'\n    };\n\n    const flexRowBR = {\n        ...flexRow,\n        justifyContent: 'flex-end',\n        alignItems: 'flex-end'\n    };\n\n    const flexColTL = {\n        ...flexCol,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start'\n    };\n\n    const flexColTC = {\n        ...flexCol,\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n    };\n\n    const flexColTR = {\n        ...flexCol,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end'\n    };\n\n    const flexColCL = {\n        ...flexCol,\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n    };\n\n    const flexColCC = {\n        ...flexCol,\n        justifyContent: 'center',\n        alignItems: 'center'\n    };\n\n    const flexColCR = {\n        ...flexCol,\n        justifyContent: 'center',\n        alignItems: 'flex-end'\n    };\n\n    const flexColBL = {\n        ...flexCol,\n        justifyContent: 'flex-end',\n        alignItems: 'flex-start'\n    };\n\n    const flexColBC = {\n        ...flexCol,\n        justifyContent: 'flex-end',\n        alignItems: 'center'\n    };\n\n    const flexColBR = {\n        ...flexCol,\n        justifyContent: 'flex-end',\n        alignItems: 'flex-end'\n    };\n\n    const fullScreen = {\n        width: '100vw',\n        height: '100vh'\n    };\n\n    const fontBody = {\n        fontFamily: theme.font.body.typeface,\n        fontWeight: theme.font.body.weight,\n        fontSize: theme.font.body.size\n    };\n\n    const baseStyles = {\n        flexRow,\n        flexCol,\n        flexRowTL,\n        flexRowTC,\n        flexRowTR,\n        flexRowCL,\n        flexRowCC,\n        flexRowCR,\n        flexRowBL,\n        flexRowBC,\n        flexRowBR,\n        flexColTL,\n        flexColTC,\n        flexColTR,\n        flexColCL,\n        flexColCC,\n        flexColCR,\n        flexColBL,\n        flexColBC,\n        flexColBR,\n        fullScreen,\n        fontBody\n    };\n\n    return {\n        ...baseStyles,\n        ...customStyles(theme, baseStyles)\n    };\n}\n\nexport { ThemeProvider, withTheme, themes, getStyles };\n","export const BOARD_STATE = {\n    GAME_OVER: 'GAME OVER',\n    CONTINUE: 'CONTINUE',\n    WIN: 'WIN'\n};\n\nexport const BOARD_PARAMETERS = {\n    easy: {\n        height: 15,\n        width: 15,\n        mineCount: 20\n    },\n    medium: {\n        height: 25,\n        width: 25,\n        mineCount: 75\n    },\n    hard: {\n        height: 30,\n        width: 60,\n        mineCount: 250\n    }\n};\n\nexport const formatTimerDisplay = timerValue => [\n    Math.floor(timerValue / 60).toString().padStart(2, '0'),\n    (timerValue % 60).toString().padStart(2, '0'),\n].join(':');","import React from 'react';\nimport { getStyles, withTheme } from '../utilities/theming';\n\nconst customStyles = (theme, baseStyles) => ({\n    cell: {\n        height: '25px',\n        width: '25px',\n        border: '1px solid #121212',\n        ...baseStyles.flexRowCC,\n        ...baseStyles.fontBody,\n        borderRadius: '2px',\n        cursor: 'pointer'\n    },\n    hidden: {\n        background: 'rgba(255, 255, 255, 0.2)',\n        '&:hover': {\n            background: 'rgba(255, 255, 255, 0.3)'\n        }\n    },\n    flagged: {\n        color: theme.color.primary.standard\n    }\n});\n\nclass HiddenCell extends React.Component {\n    onClickHandler = event => {\n        event.preventDefault();\n\n        const { x, y, isFlagged, toggleFlagCell, revealCell } = this.props;\n        if (event.type === 'contextmenu') toggleFlagCell(x, y);\n        else if (event.type === 'click' && !isFlagged) revealCell(x, y);\n    }\n\n    render = () => {\n        const { theme, isFlagged } = this.props;\n        const { cell, hidden, flagged } = getStyles(theme, customStyles);\n        return (\n            <div\n                style={{ ...cell, ...hidden, ...(isFlagged ? flagged: {})}}\n                onClick={this.onClickHandler}\n                onContextMenu={this.onClickHandler}\n            >{isFlagged ? 'X' : ''}</div>\n        );\n    }\n}\n\nexport default withTheme(HiddenCell);\n","import React from 'react';\nimport { getStyles, withTheme } from '../utilities/theming';\n\nconst colors = {\n    1: 'blue',\n    2: 'green',\n    3: 'red',\n    4: 'indigo',\n    5: 'purple',\n    6: 'teal',\n    7: 'black',\n    8: 'grey'\n};\nconst customStyles = (theme, baseStyles) => ({\n    cell: {\n        height: '25px',\n        width: '25px',\n        border: '1px solid #121212',\n        ...baseStyles.flexRowCC,\n        ...baseStyles.fontBody,\n        borderRadius: '2px',\n        cursor: 'pointer'\n    },\n    revealed: {\n        background: 'rgba(255, 255, 255, 0.08)',\n        '&:hover': {\n            background: 'rgba(255, 255, 255, 0.15)'\n        }\n    },\n    mine: {\n        background: '#F06543',\n        color: theme.color.primary.lightest\n    },\n    cellValue: value => ({\n        color: colors[value]\n    })\n});\n\nclass RevealedCell extends React.Component {\n    evaluteCellContent = () => {\n        const { isMine, mineCount } = this.props;\n        return isMine ? 'M' : (mineCount > 0 ? mineCount : '');\n    }\n\n    render = () => {\n        const { isMine, mineCount, theme } = this.props;\n        const { cell, revealed, mine, cellValue } = getStyles(theme, customStyles);\n        const style = {\n            ...cell,\n            ...revealed,\n            ...(isMine ? mine : cellValue(mineCount))\n        };\n\n        return <div style={style}>{this.evaluteCellContent()}</div>;\n    }\n}\n\nexport default withTheme(RevealedCell);\n","import React from 'react';\nimport { getStyles, withTheme } from '../utilities/theming';\nimport { BOARD_STATE } from '../utilities/utilities';\nimport HiddenCell from './HiddenCell';\nimport RevealedCell from './RevealedCell';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.initializeBoard(props);\n    }\n\n    initializeBoard({ width, height, mineCount }) {\n        const boardModel = [...Array(width).keys()].map(x =>\n            [...Array(height).keys()].map(y => ({\n                x,\n                y,\n                isMine: false,\n                mineCount: 0,\n                isRevealed: false,\n                isFlagged: false\n            }))\n        );\n\n        // Create a set of length mineCount comprising unique random x and y values\n        const set = new Set();\n        while (set.size < mineCount) {\n            // Positions are stringified so the set can ignore duplicate positions\n            set.add(JSON.stringify({\n                x: Math.round(Math.random() * (width - 1)),\n                y: Math.round(Math.random() * (height - 1))\n            }));\n        }\n\n        // Place the mines and increment the count of surrounding cells\n        const minePositions = [...set].map(JSON.parse);\n        minePositions.forEach(({ x, y }) => {\n            if (x > 0 && y > 0) if (!boardModel[x - 1][y - 1].isMine) boardModel[x - 1][y - 1].mineCount++;\n            if (x > 0) if (!boardModel[x - 1][y].isMine) boardModel[x - 1][y].mineCount++;\n            if (x > 0 && y < height - 1) if (!boardModel[x - 1][y + 1].isMine) boardModel[x - 1][y + 1].mineCount++;\n            if (y > 0) if (!boardModel[x][y - 1].isMine) boardModel[x][y - 1].mineCount++;\n            boardModel[x][y].isMine = true;\n            if (y < height - 1) if (!boardModel[x][y + 1].isMine) boardModel[x][y + 1].mineCount++;\n            if (x < width - 1 && y > 0) if (!boardModel[x + 1][y - 1].isMine) boardModel[x + 1][y - 1].mineCount++;\n            if (x < width - 1) if (!boardModel[x + 1][y].isMine) boardModel[x + 1][y].mineCount++;\n            if (x < width - 1 && y < height - 1) if (!boardModel[x + 1][y + 1].isMine) boardModel[x + 1][y + 1].mineCount++;\n        });\n\n        return {\n            minePositions,\n            matrix: boardModel\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.id !== this.props.id) {\n            this.setState(this.initializeBoard(this.props));\n        }\n    }\n\n    // Handle clicking on a cell with the right number of flags around it to reveal adjacent cells\n    revealCell = (x, y) => {\n        const { height, width } = this.props;\n        const spreadReveal = (matrix, x, y) => {\n            if (matrix[x][y].isRevealed) return matrix;\n            matrix[x][y].isRevealed = true;\n            if (matrix[x][y].mineCount > 0 || matrix[x][y].isMine) return matrix;\n\n            if (x > 0 && y > 0) matrix = spreadReveal(matrix, x - 1, y - 1);\n            if (x > 0) matrix = spreadReveal(matrix, x - 1, y);\n            if (x > 0 && y < height - 1) matrix = spreadReveal(matrix, x - 1, y + 1);\n            if (y > 0) matrix = spreadReveal(matrix, x, y - 1);\n            if (x < width - 1) matrix = spreadReveal(matrix, x + 1, y);\n            if (x < width - 1 && y > 0) matrix = spreadReveal(matrix, x + 1, y - 1);\n            if (y < height - 1) matrix = spreadReveal(matrix, x, y + 1);\n            if (x < width - 1 && y < height - 1) matrix = spreadReveal(matrix, x + 1, y + 1);\n\n            return matrix;\n        };\n\n        const newMatrix = spreadReveal(this.state.matrix, x, y);\n        this.setState({ matrix: newMatrix });\n        this.props.emitBoardState(this.evaluateBoardState());\n    }\n\n    toggleFlagCell = (x, y) => {\n        // Ignore the attempt to toggle the cell flag if the cell is already revealed\n        if (this.state.matrix[x][y].isRevealed) return;\n\n        this.setState({\n            matrix: this.state.matrix.map(column => column.map(cell => ({\n                ...cell,\n                isFlagged: cell.x === x && cell.y === y ? !cell.isFlagged : cell.isFlagged\n            })))\n        });\n    }\n\n    evaluateBoardState = () => {\n        const { height, width, mineCount } = this.props;\n        const { matrix, minePositions } = this.state;\n\n        const revealedMine = minePositions.some(({ x, y }) => matrix[x][y].isRevealed && matrix[x][y].isMine);\n        if (revealedMine) return BOARD_STATE.GAME_OVER;\n\n        const nonMineCount = height * width - mineCount;\n        const revealedCount = matrix.reduce((sum, column) => sum + column.reduce((sum, cell) => sum + cell.isRevealed, 0), 0);\n\n        return nonMineCount === revealedCount ? BOARD_STATE.WIN : BOARD_STATE.CONTINUE;\n    }\n\n    render = () => {\n        const { flexRow, flexCol } = getStyles(this.props.theme);\n\n        return (\n            <div style={flexRow}>\n                {this.state.matrix.map(column =>\n                    <div style={flexCol} key={Math.random()}>\n                        {column.map(cell => cell.isRevealed\n                            ? <RevealedCell key={Math.random()} {...cell} />\n                            : <HiddenCell key={Math.random()} {...cell} revealCell={this.revealCell} toggleFlagCell={this.toggleFlagCell} />)}\n                    </div>\n                )}\n            </div>\n        );\n    }\n};\n\nexport default withTheme(Board);\n","import React from 'react';\nimport { getStyles, withTheme } from '../utilities/theming';\n\nconst customStyles = (theme, baseStyles) => ({\n    controls: {\n        marginBottom: '24px',\n        ...baseStyles.fontBody\n    },\n    diff: {\n        border: 'none',\n        outline: 'none',\n        ...baseStyles.fontBody,\n        background: 'rgba(255, 255, 255, 0.3)',\n        color: theme.color.primary.lighter,\n        padding: '6px',\n        margin: '0 8px',\n        cursor: 'pointer',\n        borderRadius: '4px',\n        '&:after': {\n            width: 0,\n            height: 0,\n            borderLeft: '6px solid transparent',\n            borderRight: '6px solid transparent',\n            borderTop: '6px solid white',\n            position: 'absolute',\n            top: '40%',\n            right: '5px',\n            content: ''\n        }\n    },\n    opt: {\n        background: '#121212',\n        border: 'none',\n        outline: 'none',\n        cursor: 'pointer'\n    },\n    reset: {\n        background: 'rgba(255, 255, 255, 0.3)',\n        border: 'none',\n        outline: 'none',\n        ...baseStyles.fontBody,\n        color: theme.color.primary.lightest,\n        padding: '6px 18px',\n        margin: '0 8px',\n        cursor: 'pointer',\n        borderRadius: '4px'\n    }\n});\n\nclass GameControls extends React.Component {\n    render = () => {\n        const { difficulty, changeGameDifficulty, resetGame, theme } = this.props;\n        const { controls, diff, opt, reset } = getStyles(theme, customStyles);\n\n        return (\n            <form style={controls}>\n                <select style={diff} value={difficulty} onChange={changeGameDifficulty}>\n                    <option style={opt} value='easy'>EASY</option>\n                    <option style={opt} value='medium'>MEDIUM</option>\n                    <option style={opt} value='hard'>HARD</option>\n                </select>\n                <button style={reset} onClick={resetGame}>RESET</button>\n            </form>\n        );\n    }\n}\n\nexport default withTheme(GameControls);\n","import React from 'react';\nimport { getStyles, withTheme } from '../utilities/theming';\nimport { BOARD_STATE, formatTimerDisplay } from '../utilities/utilities';\n\nconst customStyles = (theme, baseStyles) => ({\n    background: {\n        position: 'absolute',\n        ...baseStyles.fullScreen,\n        zIndex: 1,\n        background: 'rgba(0, 0, 0, 0.4)'\n    },\n    alert: {\n        position: 'absolute',\n        ...baseStyles.flexColCC,\n        color: theme.color.primary.standard,\n        ...baseStyles.fontBody,\n        zIndex: 2,\n        textAlign: 'center'\n    },\n    acknowledgement: {\n        border: 'none',\n        outline: 'none',\n        color: '#151515',\n        ...baseStyles.fontBody,\n        background: theme.color.primary.lightest,\n        padding: '8px 48px',\n        marginTop: '24px',\n        borderRadius: '4px',\n        cursor: 'pointer'\n    }\n});\n\nclass GameEndAlert extends React.Component {\n    render = () => {\n        const { boardState, timerValue, resetGame, theme } = this.props;\n        const { background, alert, acknowledgement } = getStyles(theme, customStyles);\n\n        return (\n            <React.Fragment>\n                <div style={background}></div>\n                <form style={alert}>\n                    {boardState === BOARD_STATE.WIN ? 'You won!' : 'Game over.'}<br />\n                    Game time: {formatTimerDisplay(timerValue)}\n                    <button style={acknowledgement} onClick={resetGame}>RESET</button>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme(GameEndAlert);\n","import React from 'react';\nimport '../index.css';\nimport { getStyles, ThemeProvider, themes } from '../utilities/theming';\nimport { BOARD_PARAMETERS, BOARD_STATE, formatTimerDisplay } from '../utilities/utilities';\nimport Board from './Board';\nimport GameControls from './GameControls';\nimport GameEndAlert from './GameEndAlert';\n\nconst customStyles = (theme, baseStyles) => ({\n    app: {\n        ...baseStyles.flexColCC,\n        ...baseStyles.fullScreen\n    },\n    gameTimer: {\n        color: theme.color.primary.darker,\n        ...baseStyles.fontBody\n    }\n});\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            difficulty: 'medium',\n            boardId: Math.random(),\n            boardState: BOARD_STATE.CONTINUE,\n            timer: 0,\n            timerLoop: undefined,\n            theme: themes['light']\n        };\n    }\n\n    startTimer = () => {\n        this.setState({\n            timerLoop: setInterval(() => this.setState({ timer: this.state.timer + 1 }), 1000)\n        });\n    }\n\n    stopTimer = () => {\n        clearInterval(this.state.timerLoop);\n        this.setState({\n            timerLoop: undefined\n        });\n    }\n\n    changeGameDifficulty = event => {\n        this.stopTimer();\n        this.setState({\n            difficulty: event.target.value,\n            boardId: Math.random(),\n            boardState: BOARD_STATE.CONTINUE,\n            timer: 0\n        });\n    }\n\n    resetGame = event => {\n        event.preventDefault();\n\n        this.stopTimer();\n        this.setState({\n            boardId: Math.random(),\n            boardState: BOARD_STATE.CONTINUE,\n            timer: 0\n        });\n    }\n\n    respondToBoardState = boardState => {\n        if (boardState !== BOARD_STATE.CONTINUE) {\n            this.stopTimer();\n        } else if (this.state.timerLoop === undefined) {\n            this.startTimer();\n        }\n\n        this.setState({\n            boardState\n        });\n    }\n\n    render = () => {\n        const { difficulty, boardId, boardState, timer, theme } = this.state;\n        const { height, width, mineCount } = BOARD_PARAMETERS[difficulty];\n        const { app, gameTimer } = getStyles(theme, customStyles);\n\n        return <ThemeProvider theme={theme}>\n            <div style={app}>\n                <div style={gameTimer}>{formatTimerDisplay(timer)}</div>\n                <GameControls difficulty={difficulty} changeGameDifficulty={this.changeGameDifficulty} resetGame={this.resetGame} />\n                <Board id={boardId} height={height} width={width} mineCount={mineCount} emitBoardState={this.respondToBoardState} />\n                {boardState !== BOARD_STATE.CONTINUE && <GameEndAlert boardState={boardState} timerValue={timer} resetGame={this.resetGame} />}\n            </div>\n        </ThemeProvider>;\n    }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}